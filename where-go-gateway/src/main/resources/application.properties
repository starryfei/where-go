server.port=8093
spring.application.name=where-go-gateway

# 是否与服务注册于发现组件进行结合，通过 serviceId 转发到具体的服务实例。默认为 false，
# 设为 true 便开启通过服务中心的自动根据 serviceId 创建路由的功能。
#spring.cloud.gateway.discovery.locator.enabled=true
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
#spring.cloud.gateway.routes.id=where-go-service
#spring.cloud.gateway.routes.uri=lb://ORDER-SERVICE
#spring.cloud.gateway.routes.path=*


eureka.client.serviceUrl.defaultZone=http://localhost:8099/eureka/
eureka.client.register-with-eureka=true
feign.hystrix.enabled=true
logging.file.path=/Users/starryfei/logs/spring-logs/${spring.application.name}
logging.file.name=${logging.file.path}/${spring.application.name}.log
logging.level.com.starry.wheregogateway=info

## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.database=0
## Redis服务器地址
spring.redis.host=127.0.0.1
## Redis服务器连接端口
spring.redis.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.timeout=5000